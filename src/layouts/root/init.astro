---
import { type PageName } from "../../navigation"
import Meta from "../../components/meta.astro"
import Header from "../../components/header/init.astro"
import Footer from "../../components/footer/init.astro"

//Avoid const enum here
export enum Theme {
	Dark,
	Light,
	Device,
}

interface Props {
	current: PageName,
}

const {current} = Astro.props
---

<html lang="en" data-theme={Theme.Dark.toString()}>
	<head>
		<Meta/>
		<link rel="icon" type="image/webp" href="/logo.webp"/>
		<title>{"rhpidfyre.io" + (current === "Home" ? "" : " | " + current)}</title>
		<!--Client theme-->
		<script is:inline define:vars={{ Theme }}>
			const root = document.querySelector(":root")
			if (!root) { return }

			const savedTheme     = localStorage.getItem("theme")
			const prefersLight   = window.matchMedia("(prefers-color-scheme: light)")
			const Enum_Light_str = Theme.Light.toString()
			const Enum_Dark_str  = Theme.Dark.toString()

			if (savedTheme === Enum_Light_str) {
				root.setAttribute("data-theme", Enum_Light_str)
			} else if (savedTheme === Enum_Dark_str) {
				root.setAttribute("data-theme", Enum_Dark_str)
			} else {
				if (prefersLight.matches) {
					root.setAttribute("data-theme", Enum_Light_str)
				}
			}
			prefersLight.addEventListener("change", event => {
				root.setAttribute("data-theme", event.matches ? Enum_Light_str : Enum_Dark_str)
			})
		</script>
	</head>
	<body>
		<Header current={current}/>
		<main>
			<slot/>
		</main>
		<Footer/>
	</body>
</html>

<style lang="scss">
	@use "../../scss/variables.scss";

	main {
		display: grid;
		gap: 80px;
	}
</style>

<style lang="scss" is:global>
	@forward "./global.scss";
</style>