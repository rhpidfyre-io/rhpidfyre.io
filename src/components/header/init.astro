---
import ButtonSvg from "../button/svg.astro"
import ButtonImg from "../button/img.astro"
import navigation, { type PageName, format_pagelink } from "../../navigation"

interface Props {
	current: PageName
}
const {current} = Astro.props
---

<header class="topbar" id="header-nav">
	<aside class="box">
		{navigation.services.map(service => <ButtonImg text={service.name} href={service.href} image={service.image} alt={service.image_alt}/>)}
	</aside>
	<nav class="box">
		{navigation.pages.map(page_name => <ButtonSvg
			href={format_pagelink(page_name)}
			text={page_name}
			svg={page_name as PageName}
			active={current === page_name}/>)}
	</nav>
	<script is:inline>
		const header = document.getElementById("header-nav")
		if (!header) { throw new Error("header element is: " + header) }

		window.addEventListener("scroll", () => {
			if (window.scrollY > 50) {
				header.classList.add("scroll")
			} else {
				header.classList.remove("scroll")
			}
		})
	</script>
	<noscript>
		<!--
		https://github.com/withastro/astro/issues/14055
		@use "./scroll";
		header {
			@include scroll.header;
		}
		-->
		<style>
			noscript { /*???*/
				display: none;
			}
			.topbar {
				background-color: var(--header-scroll-background-color);
				border-bottom: 1px solid var(--header-scroll-border-bottom-color) !important;
				backdrop-filter: blur(8px);
				transition: border-bottom var(--button-transition-time);
				& > .box {
					box-shadow: 0px 0px 0px 0px var(--element-shadow-color);
					transition: box-shadow var(--button-transition-time);
				}
			}
		</style>
	</noscript>
</header>

<style lang="scss">
	@use "./scroll";

	.topbar {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 15px 25px 15px 25px;
		height: 55px;
		top: 0;
		position: sticky;
		border-bottom: 0px solid var(--header-border-bottom-color);
		transition: border-bottom var(--header-button-transition-time);

		&.scroll {
			@include scroll.header;
		}
	}
	.box {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 10px;
		background-color: var(--header-color);
		border: 1.5px solid var(--header-border-color);
		height: inherit;
		border-radius: 15px;
		padding: 0 15px 0 15px;
		box-shadow: 8px 8px 2px 1px var(--element-shadow-color);
		transition: box-shadow var(--header-button-transition-time);
	}
</style>